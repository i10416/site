name: build
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'infra/**'
      - 'README.md'
env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: setup scala CLI
        run: curl -sSLf https://virtuslab.github.io/scala-cli-packages/scala-setup.sh | sh
      - name: transform docs
        run: |
          source ~/.profile
          mkdir -p deploy/dist
          scala-cli run transform.scala  \
            --dependency dev.i10416::petit:0.0.0+108-81e1701f-SNAPSHOT \
            --repo https://s01.oss.sonatype.org/content/repositories/snapshots \
            -- docs deploy/dist
        env:
          SITE_HOST: ${{ secrets.SITE_HOST }}
          SITE_TITLE: ${{ secrets.SITE_TITLE }}
          SITE_TWITTER: ${{ secrets.SITE_TWITTER}}
          SITE_GITHUB: ${{ secrets.SITE_GITHUB }}
      - name: Authenticate to Google Cloud
        id: 'google-cloud-auth'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_ID_PROVIDER_ID }}"
          service_account: "${{ secrets.TF_GCP_SERVICE_ACCOUNT }}"
          create_credentials_file: true
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: Configure docker to use gcloud cli
        run: gcloud auth configure-docker --quiet
      - name: push server image
        run: |
          cd deploy
          docker build -t asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/cloudrun/${{ secrets.RUN_SERVICE }}:latest .
          docker push asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/cloudrun/${{ secrets.RUN_SERVICE }}:latest

      - name: run app
        run: |
          gcloud run deploy ${{ secrets.RUN_SERVICE }} \
          --image asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/cloudrun/${{ secrets.RUN_SERVICE }}:latest \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --region ${{ secrets.GCP_REGION }}

